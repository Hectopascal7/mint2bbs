<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mint.dao.AdviceMapper">
  <resultMap id="BaseResultMap" type="com.mint.pojo.Advice">
    <constructor>
      <idArg column="nid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="accesscount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="replycount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isbest" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="issticky" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mint.pojo.Advice">
    <constructor>
      <idArg column="nid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="accesscount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="replycount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isbest" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="issticky" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    nid, uid, title, publishtime, accesscount, replycount, isbest, issticky
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_advice
    where nid = #{nid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_advice
    where nid = #{nid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mint.pojo.Advice">
    insert into tb_advice (nid, uid, title, 
      publishtime, accesscount, replycount, 
      isbest, issticky, content
      )
    values (#{nid,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{publishtime,jdbcType=TIMESTAMP}, #{accesscount,jdbcType=INTEGER}, #{replycount,jdbcType=INTEGER}, 
      #{isbest,jdbcType=INTEGER}, #{issticky,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mint.pojo.Advice">
    insert into tb_advice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        nid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="publishtime != null">
        publishtime,
      </if>
      <if test="accesscount != null">
        accesscount,
      </if>
      <if test="replycount != null">
        replycount,
      </if>
      <if test="isbest != null">
        isbest,
      </if>
      <if test="issticky != null">
        issticky,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        #{nid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="accesscount != null">
        #{accesscount,jdbcType=INTEGER},
      </if>
      <if test="replycount != null">
        #{replycount,jdbcType=INTEGER},
      </if>
      <if test="isbest != null">
        #{isbest,jdbcType=INTEGER},
      </if>
      <if test="issticky != null">
        #{issticky,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mint.pojo.Advice">
    update tb_advice
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        publishtime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="accesscount != null">
        accesscount = #{accesscount,jdbcType=INTEGER},
      </if>
      <if test="replycount != null">
        replycount = #{replycount,jdbcType=INTEGER},
      </if>
      <if test="isbest != null">
        isbest = #{isbest,jdbcType=INTEGER},
      </if>
      <if test="issticky != null">
        issticky = #{issticky,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where nid = #{nid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mint.pojo.Advice">
    update tb_advice
    set uid = #{uid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      publishtime = #{publishtime,jdbcType=TIMESTAMP},
      accesscount = #{accesscount,jdbcType=INTEGER},
      replycount = #{replycount,jdbcType=INTEGER},
      isbest = #{isbest,jdbcType=INTEGER},
      issticky = #{issticky,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where nid = #{nid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mint.pojo.Advice">
    update tb_advice
    set uid = #{uid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      publishtime = #{publishtime,jdbcType=TIMESTAMP},
      accesscount = #{accesscount,jdbcType=INTEGER},
      replycount = #{replycount,jdbcType=INTEGER},
      isbest = #{isbest,jdbcType=INTEGER},
      issticky = #{issticky,jdbcType=INTEGER}
    where nid = #{nid,jdbcType=VARCHAR}
  </update>
</mapper>